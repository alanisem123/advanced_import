{"version":3,"sources":["webpack://advanced_import/./node_modules/core-js/modules/es.string.includes.js","webpack://advanced_import/./node_modules/core-js/internals/not-a-regexp.js","webpack://advanced_import/./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack://advanced_import/./src/components/FileUploader.vue?3b9d","webpack://advanced_import/src/components/FileUploader.vue","webpack://advanced_import/./src/components/FileUploader.vue?64cb","webpack://advanced_import/./src/components/FileUploader.vue","webpack://advanced_import/./src/pages/Test.vue?fc18","webpack://advanced_import/./src/libs/Uploader/CanTriggerEvents.js","webpack://advanced_import/./src/libs/Uploader/Uploader.js","webpack://advanced_import/src/pages/Test.vue","webpack://advanced_import/./src/pages/Test.vue?9650","webpack://advanced_import/./src/pages/Test.vue","webpack://advanced_import/./node_modules/core-js/modules/es.array.includes.js","webpack://advanced_import/./src/assets/crying-cat.jpg"],"names":["self","callbacks","Map","on","event","callback","has","set","event_callbacks","get","includes","push","off","trigger","details","forEach","type","Uploader","form_data","axios","post","upload_url","headers","chunk_size","upload_callback","defaultUploadCallback","Object","assign","CanTriggerEvents","file","start","end","size","blob","slice","onChunkRead","target","readyState","FileReader","DONE","chunk","result","sendChunk","response","data","Error","progress","calculateProgress","upload","console","log","error","file_reader","onloadend","readAsDataURL","position","Math","floor","FormData","file_keys","key","append"],"mappings":"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","file":"advanced_import.common.12.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.processing)?_c('div',[_c('b-progress',{attrs:{\"max\":_vm.max,\"show-progress\":\"\",\"animated\":\"\",\"variant\":\"success\",\"height\":\"2rem\",\"size\":\"sm\"}},[_c('b-progress-bar',{attrs:{\"value\":_vm.progress,\"label\":(((_vm.progress*100).toFixed(2)) + \"%\")}})],1),_c('div',{staticClass:\"text-muted small\"},[(_vm.uploaded_bytes && _vm.uploaded_bytes>0)?_c('span',[_vm._v(\"uploaded \"+_vm._s(_vm.formatBytes(_vm.uploaded_bytes))+\" of \"+_vm._s(_vm.formatBytes(_vm.file_size)))]):_vm._e(),_c('non-blank-space')],1)],1):_vm._e(),(false)?_c('section',{staticClass:\"debug\"},[_vm._v(\" \"+_vm._s(_vm.progress)+\" \"+_vm._s(_vm.uploaded_bytes)+\" \"+_vm._s(_vm.remote_file_name)+\" \"+_vm._s(_vm.file_size)+\" \"+_vm._s(_vm.processed)+\" \")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div v-if=\"processing\">\n            <b-progress  :max=\"max\" show-progress animated variant=\"success\" height=\"2rem\" size=\"sm\">\n                <b-progress-bar :value=\"progress\" :label=\"`${(progress*100).toFixed(2)}%`\"></b-progress-bar>\n            </b-progress>\n            <!-- <button class=\"btn btn-danger\" @click=\"onPause\">Pause</button> -->\n            <div class=\"text-muted small\">\n                <span v-if=\"uploaded_bytes && uploaded_bytes>0\">uploaded {{formatBytes(uploaded_bytes)}} of {{formatBytes(file_size)}}</span>\n                <non-blank-space />\n            </div>\n        </div>\n        <section class=\"debug\" v-if=\"false\">\n            {{progress}}\n            {{uploaded_bytes}}\n            {{remote_file_name}}\n            {{file_size}}\n            {{processed}}\n        </section>\n    </div>\n</template>\n\n<script>\n// import { mapState } from 'vuex'\nimport FileReaderAsync from '@/libs/FileReaderAsync'\nimport {formatBytes} from '@/libs/Utility'\n\nconst MIN_CHUNK_SIZE = 1000 * 1024\nconst MAX_CHUNK_SIZE = 1000 * 1024 * 5\nconst TOTAL_CHUNKS = 20\n\nexport default {\n    data() {\n        return {\n            cancel: null, // placeholder for canceling the promsie\n            content: '',\n            start: 0,\n            end: 0,\n            max:1,\n            processing: false,\n            paused: false,\n            abort: false,\n            remote_file_name: null, // unique file name used to save the file on the server\n            progress: 0,\n            uploaded_bytes:0,\n            file_size: 0,\n            formatBytes,\n        }\n    },\n    props: {\n        files: {\n            type: [File,Array],\n            default: () => []\n        }\n    },\n    computed: {\n        /* ...mapState({\n            file: state => state.import_settings.files,\n        }), */\n        file() {\n            let files = this.files\n            let file\n            if(typeof files==='object') file = files\n            else if(Array.isArray(files) && files.length>0) file = files[0]\n            if(file) return new File([file], file.name)\n            else return null\n        },\n        chunk_size() {\n            return this.calcChunkSize(this.file)\n        },\n        processed() {\n            let uploaded_bytes = this.uploaded_bytes || 0\n            let file_size = this.file_size || 0\n            let formatted_uploaded_bytes =  formatBytes(uploaded_bytes)\n            let formatted_file_size =  formatBytes(file_size)\n            return `${formatted_uploaded_bytes}/${formatted_file_size}`\n        }\n    },\n    destroyed() {\n        this.stop()\n    },\n    methods: {\n        async processChunk(file, chunk) {\n            try {\n                if(this.abort) return\n                const response = await this.sendChunk(file, chunk)\n                const {data} = response\n                const {uploaded_bytes,file_size} = data\n                if(!data) throw new Error('no response') //exit if no response data\n                const progress = this.updateProgress(uploaded_bytes, file_size)\n                this.$emit('progress', {file, progress, response}) // notify advancement\n                // advance the start\n                this.start = this.end\n                \n                const {unique_name} = data\n                if(unique_name) this.updateUniqueFileName(unique_name)\n\n                if(!this.paused && (this.end < file.size)) {\n                    return this.upload()\n                }\n                else {\n                    // exit if we are done\n                    this.reset()\n                    let result = {component:this,file_name:this.remote_file_name }\n                    this.$emit('completed', result) // notify completed\n                    return result\n                }\n            } catch (error) {\n                const {response={}} = error\n                const {data={}} = response\n                const {message=''} = data\n                // console.log(message, file, error)\n                this.$emit('error', {message, file, error}) // notify error\n                this.reset()\n            }\n\n        },\n        calculateProgress(file, position) {\n            try {\n                const value = position / file.size\n                if(position<0) return 0\n                if(position>file.size) return 1\n                return value\n            } catch (error) {\n                return 0\n            }\n        },\n        sendChunk(file, chunk) {\n            const promise = this.$API.dispatch('upload/upload',file, chunk)\n            this.cancel = promise.cancel\n            return promise\n        },\n        calcChunkSize(file) {\n            if(!file) return MIN_CHUNK_SIZE\n            const {size=0} = file\n            let chunk_size = size/TOTAL_CHUNKS\n            if(chunk_size<MIN_CHUNK_SIZE) return MIN_CHUNK_SIZE\n            if(chunk_size>MAX_CHUNK_SIZE) return MAX_CHUNK_SIZE\n            return chunk_size\n        },\n        updateProgress(uploaded_bytes, file_size) {\n            this.uploaded_bytes = uploaded_bytes\n            this.file_size = file_size\n            if(isNaN(uploaded_bytes) || isNaN(file_size)) return\n            if(file_size<=0) return\n            let percentage = uploaded_bytes/file_size\n            this.progress = percentage\n            return percentage\n        },\n        async upload() {\n            if(!this.file) return\n            const file = this.file\n            this.processing = true\n            this.paused = false\n            this.end = this.start + this.chunk_size + 1\n            const blob = file.slice( this.start, this.end )\n            const file_reader = new FileReaderAsync()\n            const chunk = await file_reader.readAsDataURLAsync(blob)\n            return this.processChunk(file, chunk)\n        },\n        stop() {\n            if(typeof this.cancel==='function') this.cancel()\n            this.abort = true\n        },\n        onPause() {\n            this.processing = false\n            this.paused = true\n        },\n        updateUniqueFileName(unique_name=false) {\n            if(!this.file.unique_name) {\n                this.file.unique_name = unique_name\n                this.remote_file_name = unique_name\n            }\n        },\n        reset() {\n            setTimeout(()=>{\n                this.cancel = null\n                this.start = 0\n                this.end = 0\n                this.processing = false\n                this.paused = false\n                this.abort = false\n            },1000)\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileUploader.vue?vue&type=template&id=1a009a86&\"\nimport script from \"./FileUploader.vue?vue&type=script&lang=js&\"\nexport * from \"./FileUploader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('FileUploader',{on:{\"completed\":_vm.onUploadCompleted}}),_c('div',{staticClass:\"d-flex flex-row justify-content-center align-items-center\"},[_c('b-card',{attrs:{\"title\":\"This is a test\",\"img-src\":_vm.cat},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('h6',{staticClass:\"mb-0\"},[_vm._v(\"Header Slot\")])]},proxy:true},{key:\"footer\",fn:function(){return [_c('h6',{staticClass:\"mb-0\"},[_vm._v(\"Footer Slot\")])]},proxy:true}])},[_c('b-card-text',[_vm._v(\" This is a test \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * add sub capabilities to a class:\n * in the class file: import CanNotify from './CanNotify'\n * in the class constructor: Object.assign(self, CanNotify(this))\n */\nexport default self => ({\n    callbacks: new Map,\n\n    on(event, callback) {\n        if(!self.callbacks.has(event)) self.callbacks.set(event, [])\n        const event_callbacks = self.callbacks.get(event)\n        if(!event_callbacks.includes(callback)) event_callbacks.push(callback)\n    },\n    \n    off(event, callback) {\n        if(!self.callbacks.has(event) ) return\n        const event_callbacks = self.callbacks.get(event)\n        if(event_callbacks.includes(callback) ) delete event_callbacks[callback]\n    },\n\n    // Notify all observers about an event.\n    trigger(event, details=null) {\n        const callbacks = self.callbacks.get(event)\n        if(!callbacks) return\n        callbacks.forEach(callback => {\n            callback({\n                type:event,\n                details,\n            })\n        })\n    },\n})","import axios from 'axios'\nimport CanTriggerEvents from './CanTriggerEvents'\n\nexport default class Uploader {\n    chunk_size = 1000 * 1024\n    upload_url\n\n    defaultUploadCallback(form_data) {\n        return axios.post(this.upload_url,form_data, {\n            headers: {\n                'Content-Type': 'multipart/form-data', // works without as well\n            },\n        })\n    }\n\n    constructor({chunk_size, upload_callback}) {\n        if(chunk_size) this.chunk_size = chunk_size\n        if(upload_callback) this.upload_callback = upload_callback\n        else {\n            this.upload_callback = this.defaultUploadCallback\n        }\n        // add event triggering capabilities\n        Object.assign(this, CanTriggerEvents(this))\n    }\n\n    setUploadCallback(callback) {\n        this.upload_callback = callback\n    }\n\n    upload(file, start=0) {\n        let end = start + this.chunk_size + 1\n        if(end>file.size) end = file.size // limit max to file size\n        const blob = file.slice( start, end )\n\n        const onChunkRead = (file, end) => async (event) => {\n            try {\n                if ( event.target.readyState !== FileReader.DONE ) return // exit\n                const chunk = event.target.result\n\n                const response = await this.sendChunk(file, chunk)\n                const {data} = response\n                if(!data) throw new Error('no response') //exit if no response data\n                const progress = this.calculateProgress(file, end)\n                this.trigger('progress', {file, progress, response}) // notify advancement\n\n                if(end < file.size) {\n                    return this.upload(file, end) // recursive call\n                }\n                else {\n                    // exit if we are done\n                    return this.trigger('completed', {file, progress, response}) // notify completed\n                }\n            } catch (error) {\n                console.log(error)\n                return this.trigger('error', {file, error}) // notify error\n            }\n        }\n\n        const file_reader = new FileReader()\n        file_reader.onloadend = onChunkRead(file, end)\n\n        file_reader.readAsDataURL( blob ) // this triggers the ajax upload when done\n    }\n\n    calculateProgress(file, position) {\n        return Math.floor( ( position / file.size ) * 100 )\n    }\n\n    /**\n     * notify the progress\n     * @param {File} file \n     * @param {int} position position where the file has been read so far\n     * @param {object} response \n     */\n    /* notify(file, position, response) {\n        var percent_done = Math.floor( ( position / file.size ) * 100 )\n        console.log(percent_done, response)\n    } */\n\n    /**\n     * send a chunk of file\n     * @param {File} file \n     * @param {string} chunk \n     */\n    sendChunk(file, chunk) {\n        console.log(file)\n        const form_data = new FormData()\n\n        const file_keys = ['name', 'lastModified', 'lastModifiedDate', 'size', 'type']\n        file_keys.forEach(key => {\n            form_data.append(key, file[key]) \n        })\n        form_data.append('chunk', chunk)\n\n        if(typeof this.upload_callback==='function') {\n            return this.upload_callback(form_data)\n        }\n    }\n}","<template>\n    <div>\n        <FileUploader @completed=\"onUploadCompleted\"/>\n        <div class=\"d-flex flex-row justify-content-center align-items-center\">\n            <b-card \n                title=\"This is a test\"\n                :img-src=\"cat\">\n            <template #header>\n                <h6 class=\"mb-0\">Header Slot</h6>\n            </template>\n                <b-card-text>\n                This is a test\n                </b-card-text>\n                <template #footer>\n                    <h6 class=\"mb-0\">Footer Slot</h6>\n                </template>\n            </b-card>\n        </div>\n        <!-- <div>\n            <input type=\"file\" ref=\"file\" @change=\"onFileChange\">\n            <button @click=\"upload\">upload</button>\n        </div>\n        <b-progress :value=\"progress\" :max=\"max\" show-progress animated v-if=\"uploading\"></b-progress>\n        <span v-else-if=\"completed\">Completed!</span> -->\n    </div>\n</template>\n\n<script>\nimport cat from \"@/assets/crying-cat.jpg\"\nimport Uploader from '@/libs/Uploader/Uploader'\nimport FileUploader from '@/components/FileUploader'\n\nexport default {\n    components: {FileUploader},\n    data() {\n        return {\n            cat,\n            file: null,\n            progress: 0,\n            max: 100,\n            uploading: false,\n            completed: false,\n        }\n    },\n    computed: {},\n    methods: {\n        upload() {\n            try {\n                this.uploading = true\n                this.completed = false\n                this.progress = 0\n                const upload_callback = (form_data) => this.$API.dispatch('upload/upload', form_data)\n                const uploader = new Uploader({upload_callback, chunk_size:1000*1024*1})\n                uploader.on('progress', (event) => {\n                    const {type, details} = event\n                    const {progress} = details\n                    this.progress = progress\n                    console.log(details, type, progress)\n                })\n                uploader.on('completed', (event) => {\n                    console.log(event)\n                    this.uploading = false\n                    this.completed = true\n                })\n                uploader.on('error', (event) => {\n                    console.log(event)\n                    this.uploading = false\n                    this.completed = false\n                })\n\n                uploader.upload(this.file)\n            } catch (error) {\n                console.log(error)\n            }\n        },\n        onFileChange(event) {\n            console.log(event)\n            const file_element = this.$refs.file\n            const file_list = file_element.files\n            const file = file_list[0] || false\n            this.file = file\n\n        },\n        update(subject, event, data) {\n            console.log(subject, event, data)\n        },\n        onUploadCompleted({component,file_name}) {\n            console.log(component,file_name)\n        }\n    },\n}\n</script>\n\n<style scope>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=aeed68c8&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","module.exports = __webpack_public_path__ + \"img/crying-cat.3e8409dc.jpg\";"],"sourceRoot":""}