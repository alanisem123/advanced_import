{"version":3,"sources":["webpack://advanced_import/./node_modules/core-js/modules/es.string.includes.js","webpack://advanced_import/./node_modules/core-js/internals/not-a-regexp.js","webpack://advanced_import/./src/components/import/MapFields.vue?a40e","webpack://advanced_import/src/components/import/MapFields.vue","webpack://advanced_import/./src/components/import/MapFields.vue?51da","webpack://advanced_import/./src/components/import/MapFields.vue","webpack://advanced_import/./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack://advanced_import/./node_modules/core-js/modules/es.array.includes.js"],"names":[],"mappings":";;;;;;AAAa;AACb,QAAQ,mBAAO,CAAC,MAAqB;AACrC,iBAAiB,mBAAO,CAAC,MAA2B;AACpD,6BAA6B,mBAAO,CAAC,MAAuC;AAC5E,2BAA2B,mBAAO,CAAC,MAAsC;;AAEzE;AACA;AACA,GAAG,2EAA2E;AAC9E;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACbD,eAAe,mBAAO,CAAC,MAAwB;;AAE/C;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACNA,0BAA0B,aAAa,0BAA0B,wBAAwB,gKAAgK,iDAAiD,+JAA+J,aAAa,mEAAmE,6BAA6B,SAAS,sCAAsC,0BAA0B,0BAA0B,mCAAmC,wEAAwE,gBAAgB,UAAU,sBAAsB,iDAAiD,gHAAgH,4CAA4C,8CAA8C,0BAA0B,oBAAoB,qEAAqE,qCAAqC,sCAAsC,KAAK,0BAA0B,wCAAwC,eAAe,OAAO,YAAY,6EAA6E,oBAAoB,iBAAiB,sDAAsD,WAAW,eAAe,8BAA8B,sFAAsF,OAAO,0GAA0G,QAAQ,kDAAkD,qBAAqB,4BAA4B,iBAAiB,qBAAqB,OAAO,mEAAmE,YAAY,mBAAmB,kYAAkY,8DAA8D,wDAAwD,oBAAoB;AACngF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwEA;AAEA;AACA,MADA,kBACA;AACA;AAGA,GALA;AAMA,kGACA;AACA;AAAA;AAAA,KADA;AAEA;AAAA;AAAA,KAFA;AAGA;AAAA;AAAA;AAHA,IADA;AAMA;AACA,SADA,iBACA;AAAA;AAAA,OADA;AAEA,SAFA,eAEA,KAFA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA,KANA;AAUA,eAVA,yBAUA;AAAA,UACA,SADA,GACA,iCADA,CACA,SADA;AAEA;AACA;AACA;AAdA,IANA;AAsBA;AACA,WADA,mBACA,UADA,EACA;AAAA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACA,OAPA;AAQA;AAVA,GAtBA;AAkCA,aAlCA,yBAkCA;AACA;AAAA;AAAA;;AACA;AACA;AACA,gBADA,oBACA,OADA,EACA;AACA;AACA;AAAA;AAAA;AACA;AACA,SALA;AAMA,0BANA,8BAMA,OANA,EAMA;AACA;AACA;AACA;AACA;AAVA;AADA;AAcA;AAlDA,G;;AC3EkV,CAAgB,8GAAG,EAAC,C;;;;;ACA9Q;AAC3B;AACL;;;AAGxD;AAC6F;AAC7F,gBAAgB,8CAAU;AAC1B,EAAE,wCAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gG;;;;;;;AClBf,sBAAsB,mBAAO,CAAC,MAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK,YAAY;AACjB,GAAG;AACH;;;;;;;;;ACda;AACb,QAAQ,mBAAO,CAAC,MAAqB;AACrC,gBAAgB,mBAAO,CAAC,MAA6B;AACrD,uBAAuB,mBAAO,CAAC,MAAiC;AAChE,8BAA8B,mBAAO,CAAC,MAA0C;;AAEhF,yDAAyD,wBAAwB;;AAEjF;AACA;AACA,GAAG,wDAAwD;AAC3D;AACA;AACA;AACA,CAAC;;AAED;AACA","file":"advanced_import.umd.16.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\"The wizard guessed the mapping for you but you can adjust the mapping as needed and select the dynamic fields.\")]),_c('table',{staticClass:\"table table-striped table-bordered\"},[_c('thead',[_c('tr',[_c('th',[_vm._v(\"Destination Field (REDCap)\")]),_c('th',[_vm._v(\"Source Field (CSV file)\")]),_c('th',[_vm._v(\"Dynamic \"),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-dynamic-fields\",modifiers:{\"modal-dynamic-fields\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-info\"}},[_c('font-awesome-icon',{staticClass:\"icon\",attrs:{\"icon\":['fas', 'question-circle']}})],1)],1)])]),_c('tbody',_vm._l((_vm.form_fields),function(field,index){return _c('tr',{key:index},[_c('td',[_c('span',{staticClass:\"d-flex flex-row align-items-center\"},[_c('span',[_vm._v(_vm._s(field.element_label))]),(field.field_name===_vm.primary_key)?_c('font-awesome-icon',{staticClass:\"icon text-warning ml-1\",attrs:{\"title\":\"primary key\",\"icon\":['fas', 'star']}}):_vm._e()],1),_c('span',{staticClass:\"small\"},[_vm._v(\"(\"+_vm._s(field.field_name)+\")\")])]),_c('td',[_c('select',{staticClass:\"form-control\",domProps:{\"value\":_vm.mapping[field.field_name]},on:{\"change\":function($event){_vm.onInput(field.field_name)($event)}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"--- skip ---\")]),_vm._l((_vm.csv_fields),function(csv_field,index){return _c('option',{key:index,attrs:{\"disabled\":Object.values(_vm.mapping).includes(index)},domProps:{\"value\":index}},[_vm._v(_vm._s(csv_field))])})],2),_c('div')]),_c('td',[(field.field_name!==_vm.primary_key)?_c('b-form-checkbox',{attrs:{\"disabled\":!field.field_name || isNaN(_vm.mapping[field.field_name]),\"value\":field.field_name,\"switch\":\"\"},model:{value:(_vm.dynamic_keys),callback:function ($$v) {_vm.dynamic_keys=$$v},expression:\"dynamic_keys\"}}):_vm._e()],1)])}),0)]),_c('b-modal',{attrs:{\"id\":\"modal-dynamic-fields\",\"title\":\"Dynamic fields\",\"ok-only\":\"\"}},[_c('div',{staticClass:\"my-4\"},[_c('p',[_vm._v(\"Mark as \\\"dynamic\\\" the fields that could change in an entry.\")]),_c('p',[_vm._v(\"If you are importing \\\"medications\\\" in a repeated form, for example, you may want to mark the \\\"status\\\" field as dynamic since it could change in time.\")]),_c('p',[_vm._v(\"Dynamic fields will be ignored when the wizard will try to determine the uniqueness of a row.\")])])]),_c('div',{staticClass:\"buttons d-flex flex-row justify-content-between\"},[_vm._t(\"left\"),_vm._t(\"default\"),_vm._t(\"right\",null,{\"validation\":_vm.$v})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <p>The wizard guessed the mapping for you but you can adjust the mapping as needed and select the dynamic fields.</p>\n        \n        <table class=\"table table-striped table-bordered\">\n            <thead>\n                <tr>\n                    <th>Destination Field (REDCap)</th>\n                    <th>Source Field (CSV file)</th>\n                    <th>Dynamic <b-button class=\"\" v-b-modal.modal-dynamic-fields size=\"sm\" variant=\"outline-info\"><font-awesome-icon class=\"icon\" :icon=\"['fas', 'question-circle']\" /></b-button>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(field, index) in form_fields\" :key=\"index\">\n                    <td>\n                        <span class=\"d-flex flex-row align-items-center\">\n                            <span>{{field.element_label}}</span>\n                            <font-awesome-icon v-if=\"field.field_name===primary_key\"\n                            title=\"primary key\"\n                            class=\"icon text-warning ml-1\"\n                            :icon=\"['fas', 'star']\" />\n                        </span>\n                        <span class=\"small\">({{field.field_name}})</span>\n                    </td>\n                    <td>\n                        <select class=\"form-control\" @change=\"onInput(field.field_name)($event)\" :value=\"mapping[field.field_name]\">\n                            <option value=\"\">--- skip ---</option>\n                            <option v-for=\"(csv_field, index) in csv_fields\" :key=\"index\" :value=\"index\" :disabled=\"Object.values(mapping).includes(index)\">{{csv_field}}</option>\n                        </select>\n                        <div>\n                            <!-- <b-button-group class=\"mt-2\">\n                                <select class=\"form-control\" @change=\"onInput(field.field_name)($event)\" :value=\"mapping[field.field_name]\">\n                                    <option value=\"\">--- skip ---</option>\n                                    <option v-for=\"(csv_field, index) in csv_fields\" :key=\"index\" :value=\"index\" :disabled=\"Object.values(mapping).includes(index)\">{{csv_field}}</option>\n                                </select>\n                                <b-button>\n\n                                <b-form-checkbox v-model=\"dynamic_keys\" :disabled=\"!field.field_name || isNaN(mapping[field.field_name])\" :value=\"field.field_name\">\n                                </b-form-checkbox>\n                                </b-button>\n                            </b-button-group> -->\n                        </div>\n                    </td>\n                    <td>\n                        <b-form-checkbox v-if=\"field.field_name!==primary_key\"\n                            v-model=\"dynamic_keys\"\n                            :disabled=\"!field.field_name || isNaN(mapping[field.field_name])\"\n                            :value=\"field.field_name\" switch>\n                        </b-form-checkbox>\n                        <!-- <input type=\"checkbox\" name=\"\" id=\"\" v-model=\"dynamic_keys\" :disabled=\"!field.field_name || !mapping[field.field_name]\" :value=\"field.field_name\"> -->\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <b-modal id=\"modal-dynamic-fields\" title=\"Dynamic fields\" ok-only>\n            <div class=\"my-4\">\n                <p>Mark as \"dynamic\" the fields that could change in an entry.</p>\n                <p>If you are importing \"medications\" in a repeated form, for example, you may want to mark the \"status\" field as dynamic since it could change in time.</p>\n                <p>Dynamic fields will be ignored when the wizard will try to determine the uniqueness of a row.</p>\n            </div>\n\n        </b-modal>\n\n        <div class=\"buttons d-flex flex-row justify-content-between\" >\n            <slot name=\"left\" ></slot>\n            <slot></slot>\n            <slot name=\"right\" :validation=\"$v\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        ...mapState({\n            csv_fields: state => state.csv_data.fields,\n            mapping: state => state.import_settings.mapping,\n            primary_key: state => state.import_settings.primary_key,\n        }),\n        dynamic_keys: {\n            get() { return this.$store.state.import_settings.dynamic_keys},\n            set(value) { this.$store.dispatch('import_settings/setStateProperty', {key: 'dynamic_keys', value})},\n        },\n        form_fields() {\n            const { form_name } = this.$store.state.import_settings\n            const fields = this.$store.getters['settings/form_fields'](form_name)\n            return fields\n        },\n    },\n    methods: {\n        onInput(field_name) {\n            return (event) => {\n                const value = Number(event.target.value)\n                if(!field_name || isNaN(value)) {\n                    console.log(`error mapping the field ${field_name}`)\n                    return\n                }\n                this.$store.dispatch('import_settings/setMapping', {target:field_name, source: value})\n            }\n        }\n    },\n    validations() {\n        const form_field_names = [...this.form_fields].map(field => field.field_name)\n        return {\n            mapping: {\n                required(mapping) {\n                    const mapping_keys = Object.keys(mapping)\n                    const mapped_form_fields = form_field_names.filter(value => mapping_keys.includes(value))\n                    return mapped_form_fields.length>=1\n                },\n                primaryKeyIsMapped(mapping) {\n                    const mapping_keys = Object.keys(mapping)\n                    const primary_key = this.primary_key\n                    return mapping_keys.includes(primary_key)\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapFields.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapFields.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapFields.vue?vue&type=template&id=76d310d2&\"\nimport script from \"./MapFields.vue?vue&type=script&lang=js&\"\nexport * from \"./MapFields.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"sourceRoot":""}