{"version":3,"sources":["webpack://advanced_import/./node_modules/core-js/modules/es.string.includes.js","webpack://advanced_import/./node_modules/core-js/internals/not-a-regexp.js","webpack://advanced_import/./src/components/import/MapFields.vue?c9d3","webpack://advanced_import/./src/components/import/MapFields.vue?699f","webpack://advanced_import/./src/components/import/CsvFieldsDropDown.vue?e731","webpack://advanced_import/src/components/import/CsvFieldsDropDown.vue","webpack://advanced_import/./src/components/import/CsvFieldsDropDown.vue?d419","webpack://advanced_import/./src/components/import/CsvFieldsDropDown.vue?8513","webpack://advanced_import/src/components/import/MapFields.vue","webpack://advanced_import/./src/components/import/MapFields.vue?51da","webpack://advanced_import/./src/components/import/MapFields.vue?d59d","webpack://advanced_import/./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack://advanced_import/./node_modules/core-js/modules/es.array.includes.js","webpack://advanced_import/./src/components/import/CsvFieldsDropDown.vue?9b06"],"names":["$","notARegExp","requireObjectCoercible","correctIsRegExpLogic","target","proto","forced","includes","searchString","String","this","indexOf","arguments","length","undefined","isRegExp","module","exports","it","TypeError","render","_vm","_h","$createElement","_c","_self","_v","staticClass","directives","name","rawName","modifiers","attrs","_l","form_field","index","key","class","mapped","hasMapping","field_name","primary_key","isDynamic","on","$event","onDynamicToggle","_e","_s","element_label","element_type","_t","$v","staticRenderFns","scopedSlots","_u","fn","buttonText","proxy","csv_field","csvIndex","isDisabled","isMapped","nativeOn","preventDefault","onSelected","checked","component","wellKnownSymbol","MATCH","METHOD_NAME","regexp","error1","error2","$includes","addToUnscopables","el"],"mappings":"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","file":"advanced_import.umd.min.10.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapFields.vue?vue&type=style&index=0&id=3935dddd&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',[_vm._v(\"The wizard guessed the mapping for you but you can adjust the mapping as needed and select the dynamic fields.\")]),_c('table',{staticClass:\"table table-striped table-bordered\"},[_c('thead',[_c('tr',[_c('th',{staticClass:\"text-nowrap\"},[_vm._v(\"Dynamic \"),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-dynamic-fields\",modifiers:{\"modal-dynamic-fields\":true}}],attrs:{\"size\":\"sm\",\"variant\":\"outline-info\"}},[_c('font-awesome-icon',{staticClass:\"icon\",attrs:{\"icon\":['fas', 'question-circle']}})],1)],1),_c('th',[_vm._v(\"Destination Field (REDCap)\")]),_c('th',[_vm._v(\"Source Field (CSV file)\")])])]),_c('tbody',_vm._l((_vm.form_fields),function(form_field,index){return _c('tr',{key:index,class:{mapped: _vm.hasMapping(form_field.field_name)}},[_c('td',{staticClass:\"min text-right\"},[(form_field.field_name!==_vm.primary_key)?_c('b-form-checkbox',{attrs:{\"disabled\":!_vm.hasMapping(form_field.field_name),\"checked\":_vm.isDynamic(form_field.field_name),\"switch\":\"\"},on:{\"input\":function($event){return _vm.onDynamicToggle(form_field.field_name, $event)}}}):_vm._e()],1),_c('td',[_c('span',{staticClass:\"d-flex flex-row align-items-center\"},[_c('span',[_vm._v(_vm._s(form_field.element_label))]),(form_field.field_name===_vm.primary_key)?_c('font-awesome-icon',{staticClass:\"icon text-warning ml-1\",attrs:{\"title\":\"primary key\",\"icon\":['fas', 'star']}}):_vm._e()],1),_c('span',{staticClass:\"small\"},[_vm._v(\"(\"+_vm._s(form_field.field_name)+\")\")])]),_c('td',[_c('CsvFieldsDropDown',{attrs:{\"redcapFieldName\":form_field.field_name,\"redcapFieldType\":form_field.element_type}})],1)])}),0)]),_c('b-modal',{attrs:{\"id\":\"modal-dynamic-fields\",\"title\":\"Dynamic fields\",\"ok-only\":\"\"}},[_c('div',{staticClass:\"my-4\"},[_c('p',[_vm._v(\"Mark as \\\"dynamic\\\" the fields that are not relevant in determining the uniqueness of an entry (i.e. can be different compared to existing data).\")]),_c('p',[_vm._v(\"If you are importing \\\"medications\\\" in a repeated form, for example, you may want to mark the \\\"status\\\" field as dynamic since it could have changed since the previous import.\")]),_c('p',[_vm._v(\"Dynamic fields will be ignored when the wizard will try to determine the uniqueness of a row.\")])])]),_c('p',[_vm._v(\"Remember to map the primary key to proceed.\")]),_c('div',{staticClass:\"buttons d-flex flex-row justify-content-between\"},[_vm._t(\"left\"),_vm._t(\"default\"),_vm._t(\"right\",null,{\"validation\":_vm.$v})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-dropdown',{staticClass:\"checkbox-dropdown bg-white\",attrs:{\"variant\":\"outline-secondary\"},scopedSlots:_vm._u([{key:\"button-content\",fn:function(){return [_c('div',[_c('span',[_vm._v(_vm._s(_vm.buttonText))])])]},proxy:true}])},[_c('b-dropdown-text',[(_vm.multiSelectEnabled)?_c('span',{staticClass:\"small font-italic text-info\"},[_vm._v(\"multiple selection\")]):_c('span',{staticClass:\"small font-italic text-muted\"},[_vm._v(\"single selection\")])]),_vm._l((_vm.csv_fields),function(csv_field,csvIndex){return _c('b-dropdown-text',{key:csvIndex},[_c('div',{staticClass:\"d-flex\"},[_c('b-form-checkbox',{attrs:{\"disabled\":_vm.isDisabled(csvIndex),\"checked\":_vm.isMapped(csvIndex),\"switch\":\"\"},nativeOn:{\"input\":function($event){$event.preventDefault();return _vm.onSelected(csvIndex, $event.target.checked)}}},[_c('span',[_vm._v(_vm._s(csv_field))])])],1)])})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-dropdown  variant=\"outline-secondary\" class=\"checkbox-dropdown bg-white\" >\n    <template #button-content>\n        <div>\n            <span>{{buttonText}}</span>\n        </div>\n    </template>\n    <b-dropdown-text >\n        <span v-if=\"multiSelectEnabled\" class=\"small font-italic text-info\" >multiple selection</span>\n        <span v-else class=\"small font-italic text-muted\" >single selection</span>\n    </b-dropdown-text>\n    <b-dropdown-text v-for=\"(csv_field, csvIndex) in csv_fields\" :key=\"csvIndex\" >\n        <div class=\"d-flex\">\n            <b-form-checkbox\n                :disabled=\"isDisabled(csvIndex)\" \n                :checked=\"isMapped(csvIndex)\" @input.native.prevent=\"onSelected(csvIndex, $event.target.checked)\"\n                switch>\n                <span>{{csv_field}}</span>\n            </b-form-checkbox>\n        </div>\n    </b-dropdown-text>\n\n</b-dropdown>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n    computed: {\n        ...mapState({\n            csv_fields: state => state.csv_data.fields,\n            mapping: state => state.import_settings.mapping,\n        }),\n        buttonText() {\n            const total = this.selected.length\n            if(total==0) return '--- skip ---'\n            const firstCsvIndex = this.selected[0]\n            const firstCsvColumn = this.csv_fields[firstCsvIndex]\n            if(total==1) return firstCsvColumn\n            else return `${firstCsvColumn} and ${total-1} more`\n        },\n        selected() {\n            return this.$store.getters['import_settings/mappedCsvFields'](this.redcapFieldName)\n        },\n        multiSelectEnabled() {\n            return this.redcapFieldType=='checkbox'\n        },\n    },\n    props: {\n        redcapFieldName: {\n            type: String,\n            default: ''\n        },\n        redcapFieldType: {\n            type: String,\n            default: ''\n        },\n    },\n    methods: {\n        isDisabled(csvIndex) {\n            if(this.isMappedElsewhere(csvIndex)) return true\n            const otherindexes = this.selected.filter(index => index!=csvIndex) // list of other mapped indexes excluded the current one\n            if(otherindexes.length>0 && !this.multiSelectEnabled) return true\n            return false\n        },\n        /**\n         * check if a CSV index is assigned to any REDCap field but the one specified\n         */\n        isMappedElsewhere(csvIndex) {\n            const mapping = {...this.mapping}\n            for(let [redcapField, csvIndexes] of Object.entries(mapping)) {\n                if(redcapField==this.redcapFieldName) continue\n                if(csvIndexes.indexOf(csvIndex)>=0) return true\n            }\n            return false\n        },\n        /**\n         * check if a REDCap field has a specific CSV column assigned\n         */\n        isMapped(csvIndex) {\n            return this.selected.indexOf(csvIndex) >= 0\n        },\n        onSelected(csvIndex, checked) {\n            const fieldName = this.redcapFieldName\n            this.$store.dispatch('import_settings/toggleCsvField', {fieldName, csvIndex, checked})\n        },\n    }\n}\n</script>\n\n<style scoped>\n.checkbox-dropdown {\n    width: 100%;\n}\n.checkbox-dropdown >>> .btn.dropdown-toggle {\n    text-align: left;\n    display: flex;\n    align-items: center;\n\n}\n.checkbox-dropdown >>> .btn.dropdown-toggle > div {\n    margin-right: auto;\n    display: inline-block;\n    position: relative;\n}\n.checkbox-dropdown >>> .btn.dropdown-toggle > div::after {\n    content: \"\\241f\";\n    display: block;\n    color: transparent;\n    visibility: hidden;\n}\n.checkbox-dropdown >>> .btn.dropdown-toggle > div > *{\n    position: absolute;\n    max-width: 200px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CsvFieldsDropDown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CsvFieldsDropDown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CsvFieldsDropDown.vue?vue&type=template&id=4e0303e8&scoped=true&\"\nimport script from \"./CsvFieldsDropDown.vue?vue&type=script&lang=js&\"\nexport * from \"./CsvFieldsDropDown.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CsvFieldsDropDown.vue?vue&type=style&index=0&id=4e0303e8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4e0303e8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <p>The wizard guessed the mapping for you but you can adjust the mapping as needed and select the dynamic fields.</p>\n        <table class=\"table table-striped table-bordered\">\n            <thead>\n                <tr>\n                    <th class=\"text-nowrap\">Dynamic <b-button class=\"\" v-b-modal.modal-dynamic-fields size=\"sm\" variant=\"outline-info\"><font-awesome-icon class=\"icon\" :icon=\"['fas', 'question-circle']\" /></b-button></th>\n                    <th>Destination Field (REDCap)</th>\n                    <th>Source Field (CSV file)</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(form_field, index) in form_fields\" :key=\"index\" :class=\"{mapped: hasMapping(form_field.field_name)}\">\n                    <td class=\"min text-right\">\n                        <b-form-checkbox v-if=\"form_field.field_name!==primary_key\"\n                            :disabled=\"!hasMapping(form_field.field_name)\"\n                            :checked=\"isDynamic(form_field.field_name)\" @input=\"onDynamicToggle(form_field.field_name, $event)\"\n                            switch>\n                        </b-form-checkbox>\n                    </td>\n                    <td>\n                        <span class=\"d-flex flex-row align-items-center\">\n                            <span>{{form_field.element_label}}</span>\n                            <font-awesome-icon v-if=\"form_field.field_name===primary_key\"\n                            title=\"primary key\"\n                            class=\"icon text-warning ml-1\"\n                            :icon=\"['fas', 'star']\" />\n                        </span>\n                        <span class=\"small\">({{form_field.field_name}})</span>\n                    </td>\n                    <td>\n                        <CsvFieldsDropDown :redcapFieldName=\"form_field.field_name\" :redcapFieldType=\"form_field.element_type\" />\n                    </td>\n                    \n                </tr>\n            </tbody>\n        </table>\n        <b-modal id=\"modal-dynamic-fields\" title=\"Dynamic fields\" ok-only>\n            <div class=\"my-4\">\n                <p>Mark as \"dynamic\" the fields that are not relevant in determining the uniqueness of an entry (i.e. can be different compared to existing data).</p>\n                <p>If you are importing \"medications\" in a repeated form, for example, you may want to mark the \"status\" field as dynamic since it could have changed since the previous import.</p>\n                <p>Dynamic fields will be ignored when the wizard will try to determine the uniqueness of a row.</p>\n            </div>\n\n        </b-modal>\n\n        <p>Remember to map the primary key to proceed.</p>\n\n        <div class=\"buttons d-flex flex-row justify-content-between\" >\n            <slot name=\"left\" ></slot>\n            <slot></slot>\n            <slot name=\"right\" :validation=\"$v\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CsvFieldsDropDown from './CsvFieldsDropDown'\nimport { mapState } from 'vuex'\n\nexport default {\n    components: { CsvFieldsDropDown },\n    data() {\n        return {}\n    },\n    computed: {\n        ...mapState({\n            csv_fields: state => state.csv_data.fields,\n            // mappingList: state => state.import_settings.mappingList,\n            primary_key: state => state.import_settings.primary_key,\n            mapping: state => state.import_settings.mapping,\n            dynamic_fields: state => state.import_settings.dynamic_fields,\n        }),\n        form_fields() {\n            const { form_name } = this.$store.state.import_settings\n            const fields = this.$store.getters['settings/form_fields'](form_name)\n            return fields\n        },\n    },\n    methods: {\n        onDynamicToggle(field, checked) {\n           this.$store.dispatch('import_settings/toggleDynamicField', {field, checked})\n        },\n        /**\n         * check if a REDCap field has at least a CSV column associated\n         */\n        hasMapping(redcapField) {\n            const csvFields = this.$store.getters['import_settings/mappedCsvFields'](redcapField)\n            return csvFields.length>0\n        },\n        isDynamic(redcapField) {\n            return this.dynamic_fields.indexOf(redcapField)>=0\n        }\n    },\n    validations() {\n        const getMappedFields = (list) => {\n            const mappedFields = []\n            for(let [fieldName, indexes] of Object.entries(list) ) {\n                if(indexes.length>0) mappedFields.push(fieldName)\n            }\n            return mappedFields\n        }\n        return {\n            mapping: {\n                required(list) {\n                    const mappedFields = getMappedFields(list)\n                    return mappedFields.length>0\n                },\n                primaryKeyIsMapped(list) {\n                    const mappedFields = getMappedFields(list)\n                    const primary_key = this.primary_key\n                    return mappedFields.includes(primary_key)\n                }\n            }\n        }\n    },\n}\n</script>\n\n<style scoped>\ntd.min {\n    width: 1%;\n    white-space: nowrap;\n}\ntr.mapped {\n    position: relative;\n}\ntr.mapped > td::before {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(50,255,50, 0.1);\n    pointer-events: none;\n    z-index: 0;\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapFields.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapFields.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapFields.vue?vue&type=template&id=3935dddd&scoped=true&\"\nimport script from \"./MapFields.vue?vue&type=script&lang=js&\"\nexport * from \"./MapFields.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapFields.vue?vue&type=style&index=0&id=3935dddd&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3935dddd\",\n  null\n  \n)\n\nexport default component.exports","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CsvFieldsDropDown.vue?vue&type=style&index=0&id=4e0303e8&scoped=true&lang=css&\""],"sourceRoot":""}