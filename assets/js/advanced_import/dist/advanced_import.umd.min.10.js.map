{"version":3,"sources":["webpack://advanced_import/./node_modules/core-js/modules/es.string.includes.js","webpack://advanced_import/./node_modules/core-js/internals/not-a-regexp.js","webpack://advanced_import/./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack://advanced_import/./src/components/FileUploader.vue?3b9d","webpack://advanced_import/src/components/FileUploader.vue","webpack://advanced_import/./src/components/FileUploader.vue?64cb","webpack://advanced_import/./src/components/FileUploader.vue","webpack://advanced_import/./src/pages/Test.vue?fc18","webpack://advanced_import/./src/libs/Uploader/CanTriggerEvents.js","webpack://advanced_import/./src/libs/Uploader/Uploader.js","webpack://advanced_import/src/pages/Test.vue","webpack://advanced_import/./src/pages/Test.vue?9650","webpack://advanced_import/./src/pages/Test.vue","webpack://advanced_import/./node_modules/core-js/modules/es.array.includes.js","webpack://advanced_import/./src/assets/crying-cat.jpg"],"names":["$","notARegExp","requireObjectCoercible","correctIsRegExpLogic","target","proto","forced","includes","searchString","String","this","indexOf","arguments","length","undefined","isRegExp","module","exports","it","TypeError","wellKnownSymbol","MATCH","METHOD_NAME","regexp","e","f","render","_vm","_h","$createElement","_c","_self","attrs","max","progress","toFixed","staticClass","uploaded_bytes","_v","_s","formatBytes","file_size","_e","staticRenderFns","component","on","onUploadCompleted","cat","scopedSlots","_u","key","fn","proxy","self","callbacks","Map","event","callback","has","set","event_callbacks","get","push","off","trigger","details","forEach","type","Uploader","chunk_size","upload_callback","defaultUploadCallback","Object","assign","CanTriggerEvents","form_data","axios","post","upload_url","headers","file","start","end","size","blob","slice","onChunkRead","readyState","FileReader","DONE","chunk","result","sendChunk","response","data","Error","calculateProgress","upload","console","log","error","file_reader","onloadend","readAsDataURL","position","Math","floor","FormData","file_keys","append","$includes","addToUnscopables","arrayMethodUsesToLength","USES_TO_LENGTH","ACCESSORS","1","el"],"mappings":"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","file":"advanced_import.umd.min.10.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.processing)?_c('div',[_c('b-progress',{attrs:{\"max\":_vm.max,\"show-progress\":\"\",\"animated\":\"\",\"variant\":\"success\",\"height\":\"2rem\",\"size\":\"sm\"}},[_c('b-progress-bar',{attrs:{\"value\":_vm.progress,\"label\":(((_vm.progress*100).toFixed(2)) + \"%\")}})],1),_c('div',{staticClass:\"text-muted small\"},[(_vm.uploaded_bytes && _vm.uploaded_bytes>0)?_c('span',[_vm._v(\"uploaded \"+_vm._s(_vm.formatBytes(_vm.uploaded_bytes))+\" of \"+_vm._s(_vm.formatBytes(_vm.file_size)))]):_vm._e(),_c('non-blank-space')],1)],1):_vm._e(),(false)?_c('section',{staticClass:\"debug\"},[_vm._v(\" \"+_vm._s(_vm.progress)+\" \"+_vm._s(_vm.uploaded_bytes)+\" \"+_vm._s(_vm.remote_file_name)+\" \"+_vm._s(_vm.file_size)+\" \"+_vm._s(_vm.processed)+\" \")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div v-if=\"processing\">\n            <b-progress  :max=\"max\" show-progress animated variant=\"success\" height=\"2rem\" size=\"sm\">\n                <b-progress-bar :value=\"progress\" :label=\"`${(progress*100).toFixed(2)}%`\"></b-progress-bar>\n            </b-progress>\n            <!-- <button class=\"btn btn-danger\" @click=\"onPause\">Pause</button> -->\n            <div class=\"text-muted small\">\n                <span v-if=\"uploaded_bytes && uploaded_bytes>0\">uploaded {{formatBytes(uploaded_bytes)}} of {{formatBytes(file_size)}}</span>\n                <non-blank-space />\n            </div>\n        </div>\n        <section class=\"debug\" v-if=\"false\">\n            {{progress}}\n            {{uploaded_bytes}}\n            {{remote_file_name}}\n            {{file_size}}\n            {{processed}}\n        </section>\n    </div>\n</template>\n\n<script>\n// import { mapState } from 'vuex'\nimport FileReaderAsync from '@/libs/FileReaderAsync'\nimport {formatBytes} from '@/libs/Utility'\n\nconst MIN_CHUNK_SIZE = 1000 * 1024\nconst MAX_CHUNK_SIZE = 1000 * 1024 * 5\nconst TOTAL_CHUNKS = 20\n\nexport default {\n    data() {\n        return {\n            cancel: null, // placeholder for canceling the promsie\n            content: '',\n            start: 0,\n            end: 0,\n            max:1,\n            processing: false,\n            paused: false,\n            abort: false,\n            remote_file_name: null, // unique file name used to save the file on the server\n            progress: 0,\n            uploaded_bytes:0,\n            file_size: 0,\n            formatBytes,\n        }\n    },\n    props: {\n        files: {\n            type: [File,Array],\n            default: () => []\n        }\n    },\n    computed: {\n        /* ...mapState({\n            file: state => state.import_settings.files,\n        }), */\n        file() {\n            let files = this.files\n            let file\n            if(typeof files==='object') file = files\n            else if(Array.isArray(files) && files.length>0) file = files[0]\n            if(file) return new File([file], file.name)\n            else return null\n        },\n        chunk_size() {\n            return this.calcChunkSize(this.file)\n        },\n        processed() {\n            let uploaded_bytes = this.uploaded_bytes || 0\n            let file_size = this.file_size || 0\n            let formatted_uploaded_bytes =  formatBytes(uploaded_bytes)\n            let formatted_file_size =  formatBytes(file_size)\n            return `${formatted_uploaded_bytes}/${formatted_file_size}`\n        }\n    },\n    destroyed() {\n        this.stop()\n    },\n    methods: {\n        async processChunk(file, chunk) {\n            try {\n                if(this.abort) return\n                const response = await this.sendChunk(file, chunk)\n                const {data} = response\n                const {uploaded_bytes,file_size} = data\n                if(!data) throw new Error('no response') //exit if no response data\n                const progress = this.updateProgress(uploaded_bytes, file_size)\n                this.$emit('progress', {file, progress, response}) // notify advancement\n                // advance the start\n                this.start = this.end\n                \n                const {unique_name} = data\n                if(unique_name) this.updateUniqueFileName(unique_name)\n\n                if(!this.paused && (this.end < file.size)) {\n                    return this.upload()\n                }\n                else {\n                    // exit if we are done\n                    this.reset()\n                    let result = {component:this,file_name:this.remote_file_name }\n                    this.$emit('completed', result) // notify completed\n                    return result\n                }\n            } catch (error) {\n                const {response={}} = error\n                const {data={}} = response\n                const {message=''} = data\n                // console.log(message, file, error)\n                this.$emit('error', {message, file, error}) // notify error\n                this.reset()\n            }\n\n        },\n        calculateProgress(file, position) {\n            try {\n                const value = position / file.size\n                if(position<0) return 0\n                if(position>file.size) return 1\n                return value\n            } catch (error) {\n                return 0\n            }\n        },\n        sendChunk(file, chunk) {\n            const promise = this.$API.dispatch('upload/upload',file, chunk)\n            this.cancel = promise.cancel\n            return promise\n        },\n        calcChunkSize(file) {\n            if(!file) return MIN_CHUNK_SIZE\n            const {size=0} = file\n            let chunk_size = size/TOTAL_CHUNKS\n            if(chunk_size<MIN_CHUNK_SIZE) return MIN_CHUNK_SIZE\n            if(chunk_size>MAX_CHUNK_SIZE) return MAX_CHUNK_SIZE\n            return chunk_size\n        },\n        updateProgress(uploaded_bytes, file_size) {\n            this.uploaded_bytes = uploaded_bytes\n            this.file_size = file_size\n            if(isNaN(uploaded_bytes) || isNaN(file_size)) return\n            if(file_size<=0) return\n            let percentage = uploaded_bytes/file_size\n            this.progress = percentage\n            return percentage\n        },\n        async upload() {\n            if(!this.file) return\n            const file = this.file\n            this.processing = true\n            this.paused = false\n            this.end = this.start + this.chunk_size + 1\n            const blob = file.slice( this.start, this.end )\n            const file_reader = new FileReaderAsync()\n            const chunk = await file_reader.readAsDataURLAsync(blob)\n            return this.processChunk(file, chunk)\n        },\n        stop() {\n            if(typeof this.cancel==='function') this.cancel()\n            this.abort = true\n        },\n        onPause() {\n            this.processing = false\n            this.paused = true\n        },\n        updateUniqueFileName(unique_name=false) {\n            if(!this.file.unique_name) {\n                this.file.unique_name = unique_name\n                this.remote_file_name = unique_name\n            }\n        },\n        reset() {\n            setTimeout(()=>{\n                this.cancel = null\n                this.start = 0\n                this.end = 0\n                this.processing = false\n                this.paused = false\n                this.abort = false\n            },1000)\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileUploader.vue?vue&type=template&id=1a009a86&\"\nimport script from \"./FileUploader.vue?vue&type=script&lang=js&\"\nexport * from \"./FileUploader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('FileUploader',{on:{\"completed\":_vm.onUploadCompleted}}),_c('div',{staticClass:\"d-flex flex-row justify-content-center align-items-center\"},[_c('b-card',{attrs:{\"title\":\"This is a test\",\"img-src\":_vm.cat},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('h6',{staticClass:\"mb-0\"},[_vm._v(\"Header Slot\")])]},proxy:true},{key:\"footer\",fn:function(){return [_c('h6',{staticClass:\"mb-0\"},[_vm._v(\"Footer Slot\")])]},proxy:true}])},[_c('b-card-text',[_vm._v(\" This is a test \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * add sub capabilities to a class:\n * in the class file: import CanNotify from './CanNotify'\n * in the class constructor: Object.assign(self, CanNotify(this))\n */\nexport default self => ({\n    callbacks: new Map,\n\n    on(event, callback) {\n        if(!self.callbacks.has(event)) self.callbacks.set(event, [])\n        const event_callbacks = self.callbacks.get(event)\n        if(!event_callbacks.includes(callback)) event_callbacks.push(callback)\n    },\n    \n    off(event, callback) {\n        if(!self.callbacks.has(event) ) return\n        const event_callbacks = self.callbacks.get(event)\n        if(event_callbacks.includes(callback) ) delete event_callbacks[callback]\n    },\n\n    // Notify all observers about an event.\n    trigger(event, details=null) {\n        const callbacks = self.callbacks.get(event)\n        if(!callbacks) return\n        callbacks.forEach(callback => {\n            callback({\n                type:event,\n                details,\n            })\n        })\n    },\n})","import axios from 'axios'\nimport CanTriggerEvents from './CanTriggerEvents'\n\nexport default class Uploader {\n    chunk_size = 1000 * 1024\n    upload_url\n\n    defaultUploadCallback(form_data) {\n        return axios.post(this.upload_url,form_data, {\n            headers: {\n                'Content-Type': 'multipart/form-data', // works without as well\n            },\n        })\n    }\n\n    constructor({chunk_size, upload_callback}) {\n        if(chunk_size) this.chunk_size = chunk_size\n        if(upload_callback) this.upload_callback = upload_callback\n        else {\n            this.upload_callback = this.defaultUploadCallback\n        }\n        // add event triggering capabilities\n        Object.assign(this, CanTriggerEvents(this))\n    }\n\n    setUploadCallback(callback) {\n        this.upload_callback = callback\n    }\n\n    upload(file, start=0) {\n        let end = start + this.chunk_size + 1\n        if(end>file.size) end = file.size // limit max to file size\n        const blob = file.slice( start, end )\n\n        const onChunkRead = (file, end) => async (event) => {\n            try {\n                if ( event.target.readyState !== FileReader.DONE ) return // exit\n                const chunk = event.target.result\n\n                const response = await this.sendChunk(file, chunk)\n                const {data} = response\n                if(!data) throw new Error('no response') //exit if no response data\n                const progress = this.calculateProgress(file, end)\n                this.trigger('progress', {file, progress, response}) // notify advancement\n\n                if(end < file.size) {\n                    return this.upload(file, end) // recursive call\n                }\n                else {\n                    // exit if we are done\n                    return this.trigger('completed', {file, progress, response}) // notify completed\n                }\n            } catch (error) {\n                console.log(error)\n                return this.trigger('error', {file, error}) // notify error\n            }\n        }\n\n        const file_reader = new FileReader()\n        file_reader.onloadend = onChunkRead(file, end)\n\n        file_reader.readAsDataURL( blob ) // this triggers the ajax upload when done\n    }\n\n    calculateProgress(file, position) {\n        return Math.floor( ( position / file.size ) * 100 )\n    }\n\n    /**\n     * notify the progress\n     * @param {File} file \n     * @param {int} position position where the file has been read so far\n     * @param {object} response \n     */\n    /* notify(file, position, response) {\n        var percent_done = Math.floor( ( position / file.size ) * 100 )\n        console.log(percent_done, response)\n    } */\n\n    /**\n     * send a chunk of file\n     * @param {File} file \n     * @param {string} chunk \n     */\n    sendChunk(file, chunk) {\n        console.log(file)\n        const form_data = new FormData()\n\n        const file_keys = ['name', 'lastModified', 'lastModifiedDate', 'size', 'type']\n        file_keys.forEach(key => {\n            form_data.append(key, file[key]) \n        })\n        form_data.append('chunk', chunk)\n\n        if(typeof this.upload_callback==='function') {\n            return this.upload_callback(form_data)\n        }\n    }\n}","<template>\n    <div>\n        <FileUploader @completed=\"onUploadCompleted\"/>\n        <div class=\"d-flex flex-row justify-content-center align-items-center\">\n            <b-card \n                title=\"This is a test\"\n                :img-src=\"cat\">\n            <template #header>\n                <h6 class=\"mb-0\">Header Slot</h6>\n            </template>\n                <b-card-text>\n                This is a test\n                </b-card-text>\n                <template #footer>\n                    <h6 class=\"mb-0\">Footer Slot</h6>\n                </template>\n            </b-card>\n        </div>\n        <!-- <div>\n            <input type=\"file\" ref=\"file\" @change=\"onFileChange\">\n            <button @click=\"upload\">upload</button>\n        </div>\n        <b-progress :value=\"progress\" :max=\"max\" show-progress animated v-if=\"uploading\"></b-progress>\n        <span v-else-if=\"completed\">Completed!</span> -->\n    </div>\n</template>\n\n<script>\nimport cat from \"@/assets/crying-cat.jpg\"\nimport Uploader from '@/libs/Uploader/Uploader'\nimport FileUploader from '@/components/FileUploader'\n\nexport default {\n    components: {FileUploader},\n    data() {\n        return {\n            cat,\n            file: null,\n            progress: 0,\n            max: 100,\n            uploading: false,\n            completed: false,\n        }\n    },\n    computed: {},\n    methods: {\n        upload() {\n            try {\n                this.uploading = true\n                this.completed = false\n                this.progress = 0\n                const upload_callback = (form_data) => this.$API.dispatch('upload/upload', form_data)\n                const uploader = new Uploader({upload_callback, chunk_size:1000*1024*1})\n                uploader.on('progress', (event) => {\n                    const {type, details} = event\n                    const {progress} = details\n                    this.progress = progress\n                    console.log(details, type, progress)\n                })\n                uploader.on('completed', (event) => {\n                    console.log(event)\n                    this.uploading = false\n                    this.completed = true\n                })\n                uploader.on('error', (event) => {\n                    console.log(event)\n                    this.uploading = false\n                    this.completed = false\n                })\n\n                uploader.upload(this.file)\n            } catch (error) {\n                console.log(error)\n            }\n        },\n        onFileChange(event) {\n            console.log(event)\n            const file_element = this.$refs.file\n            const file_list = file_element.files\n            const file = file_list[0] || false\n            this.file = file\n\n        },\n        update(subject, event, data) {\n            console.log(subject, event, data)\n        },\n        onUploadCompleted({component,file_name}) {\n            console.log(component,file_name)\n        }\n    },\n}\n</script>\n\n<style scope>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=aeed68c8&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","module.exports = __webpack_public_path__ + \"img/crying-cat.3e8409dc.jpg\";"],"sourceRoot":""}